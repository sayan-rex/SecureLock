#ifndef __REGISTERS_H
#define __REGISTERS_H

#include <stdint.h>

// Base addresses
#define PERIPH_BASE       0x40000000UL
#define APB1PERIPH_BASE   PERIPH_BASE
#define APB2PERIPH_BASE   (PERIPH_BASE + 0x00010000UL)
#define AHB1PERIPH_BASE   (PERIPH_BASE + 0x00020000UL)

// RCC (Reset & Clock Control)
typedef struct {
    volatile uint32_t CR;         // 0x00
    volatile uint32_t PLLCFGR;    // 0x04
    volatile uint32_t CFGR;       // 0x08
    uint32_t RESERVED0;
    volatile uint32_t CIR;        // 0x10
    volatile uint32_t AHB1RSTR;   // 0x14
    volatile uint32_t AHB2RSTR;   // 0x18
    uint32_t RESERVED1[2];
    volatile uint32_t APB1RSTR;   // 0x24
    volatile uint32_t APB2RSTR;   // 0x28
    uint32_t RESERVED2[2];
    volatile uint32_t AHB1ENR;    // 0x30
    volatile uint32_t AHB2ENR;    // 0x34
    uint32_t RESERVED3[2];
    volatile uint32_t APB1ENR;    // 0x40
    volatile uint32_t APB2ENR;    // 0x44
} RCC_TypeDef;

#define RCC_BASE          (AHB1PERIPH_BASE + 0x3800)
#define RCC               ((RCC_TypeDef*)RCC_BASE)

// GPIO
typedef struct {
    volatile uint32_t MODER;     // 0x00
    volatile uint32_t OTYPER;    // 0x04
    volatile uint32_t OSPEEDR;   // 0x08
    volatile uint32_t PUPDR;     // 0x0C
    volatile uint32_t IDR;       // 0x10
    volatile uint32_t ODR;       // 0x14
    volatile uint16_t BSRRL;     // 0x18
    volatile uint16_t BSRRH;     // 0x1A
    volatile uint32_t LCKR;      // 0x1C
    volatile uint32_t AFR[2];    // 0x20-0x24
} GPIO_TypeDef;

#define GPIOA_BASE       (AHB1PERIPH_BASE + 0x0000)
#define GPIOB_BASE       (AHB1PERIPH_BASE + 0x0400)
#define GPIOC_BASE       (AHB1PERIPH_BASE + 0x0800)
#define GPIOD_BASE       (AHB1PERIPH_BASE + 0x0C00)
#define GPIOA           ((GPIO_TypeDef*)GPIOA_BASE)
#define GPIOB           ((GPIO_TypeDef*)GPIOB_BASE)
#define GPIOC           ((GPIO_TypeDef*)GPIOC_BASE)
#define GPIOD           ((GPIO_TypeDef*)GPIOD_BASE)

// I2C
typedef struct {
    volatile uint32_t CR1;       // 0x00
    volatile uint32_t CR2;       // 0x04
    volatile uint32_t OAR1;      // 0x08
    volatile uint32_t OAR2;      // 0x0C
    volatile uint32_t DR;        // 0x10
    volatile uint32_t SR1;       // 0x14
    volatile uint32_t SR2;       // 0x18
    volatile uint32_t CCR;       // 0x1C
    volatile uint32_t TRISE;     // 0x20
} I2C_TypeDef;

#define I2C1_BASE       (APB1PERIPH_BASE + 0x5400)
#define I2C1            ((I2C_TypeDef*)I2C1_BASE)

// USART
typedef struct {
    volatile uint32_t SR;        // 0x00
    volatile uint32_t DR;        // 0x04
    volatile uint32_t BRR;       // 0x08
    volatile uint32_t CR1;       // 0x0C
    volatile uint32_t CR2;       // 0x10
    volatile uint32_t CR3;       // 0x14
    volatile uint32_t GTPR;      // 0x18
} USART_TypeDef;

#define USART2_BASE     (APB1PERIPH_BASE + 0x4400)
#define USART2          ((USART_TypeDef*)USART2_BASE)

#endif // __REGISTERS_H
